version: '3.9'
services:
  db-auth:
    image: postgres:13.6
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=auth
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ='utc'
    command: [ "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 10s
      retries: 60
    networks:
      - arch_async

  db-accounting:
    image: postgres:13.6
    restart: unless-stopped
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=accounting
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ='utc'
    command: [ "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 10s
      retries: 60
    networks:
      - arch_async

  db-task-tracker:
    image: postgres:13.6
    restart: unless-stopped
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=task-tracker
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ='utc'
    command: [ "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 10s
      retries: 60
    networks:
      - arch_async

  db-analytics:
    image: postgres:13.6
    restart: unless-stopped
    ports:
      - "5436:5432"
    environment:
      - POSTGRES_DB=analytics
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ='utc'
    command: [ "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 10s
      retries: 60
    networks:
      - arch_async

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - arch_async

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    restart: always
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TLS_CLIENT_AUTH: none
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true # автосоздание топиков, чтобы не поднимать их вручную
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1 # 1 брокер - 1 фактор
      KAFKA_NUM_PARTITIONS: 2 # 2 партиции для наглядности
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        [ "CMD-SHELL", "nc -zv localhost 9093" ]
      interval: 3s
      timeout: 5s
      retries: 20
    networks:
      - arch_async

networks:
  arch_async:
    driver: bridge